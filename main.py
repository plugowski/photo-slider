import framebuf
import network
from slider import *
from slider.Config import Config
import slider_socket
import utime as time
import uasyncio as asyncio

# setup WiFi
ap = network.WLAN(network.AP_IF)
ap.active(True)
ap.config(essid=b"SliderMCU", authmode=network.AUTH_WPA_WPA2_PSK, password=b"GoProSlider")

# setup display
if Config.display:
    Config.display.contrast(1)

    # splash screen on start
    slider_logo = bytearray(  # 64x48
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x70\x00\x00\x00'
        b'\x00\x00\x00\x00\xf0\x00\x00\x00\x00\x00\x00\x01\x90\x00\x00\x00\x00\x00\x00\x03\x10\x00\x00'
        b'\x00\x00\x00\x00\x06\x10\x00\x00\x00\x00\x00\x00\x0c\x10\x00\x00\x00\x00\x00\x00\x18\x10\x00'
        b'\x00\x00\x00\x00\x00\x30\x18\x00\x00\x00\x00\x00\x00\x60\x0f\xff\xfe\x00\x00\x00\x00\xc0\x00'
        b'\x00\x03\x00\x00\x00\x01\x80\x00\x00\x01\x83\x00\x00\x03\x00\x00\x00\x01\x03\x80\x00\x06\x00'
        b'\x00\x00\x00\x03\xc0\x00\x0c\x00\x00\x00\x00\x03\xe0\x00\x08\x00\x00\x00\x00\x03\xf0\x00\x0c'
        b'\x00\x00\x00\x00\x03\xf8\x00\x0c\x00\x00\x00\x00\x03\xfc\x00\x06\x00\x00\x00\x00\x03\xfe\x00'
        b'\x03\x00\x00\x00\x00\x07\xff\x00\x01\x80\x00\x3f\xff\xff\xff\x80\x00\xc0\x00\x3f\xff\xff\xff'
        b'\xc0\x00\x60\x00\x3f\xff\xff\xff\xe0\x00\x30\x10\x3f\xff\xff\xff\xf0\x00\x18\x10\x3f\xff\xff'
        b'\xff\xf0\x00\x0c\x10\x3f\xff\xff\xff\xf8\x00\x06\x10\x3f\xff\xff\xff\xf8\x00\x03\x10\x3f\xff'
        b'\xff\xff\xf0\x00\x01\x90\x3f\xff\xff\xff\xe0\x00\x00\xf0\x3f\xff\xff\xff\xc0\x00\x00\x70\x3f'
        b'\xff\xff\xff\x80\x00\x00\x00\x1f\xff\xff\xff\x00\x00\x00\x00\x00\x00\x07\xfe\x00\x00\x00\x00'
        b'\x00\x00\x03\xfc\x00\x00\x00\x00\x00\x00\x03\xf8\x00\x00\x00\x00\x00\x00\x03\xf0\x00\x00\x00'
        b'\x00\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x03\x80\x00\x00'
        b'\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    )

    logo = framebuf.FrameBuffer(slider_logo, 64, 48, framebuf.MONO_HLSB)
    Config.display.blit(logo, 32, 8)
    Config.display.show()
    time.sleep(2)

# build slider object
driver = MotorDriver(Config.pin_step, Config.pin_dir, Config.pin_ms1, Config.pin_ms2, Config.pin_ms3, Config.pin_edge)
motor = Motor(driver)
status = Status(motor, Config.display)
slider = Slider(motor, status)

server = slider_socket.SliderServer(slider)
server.start()

# initialize asyncio loop
loop = asyncio.get_event_loop()

loop.call_soon(server.process_all())
# display status on OLED display
loop.create_task(status.display_status())

loop.run_forever()

server.stop()
